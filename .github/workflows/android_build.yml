name: Build and Sign Quantum NARCAN APK (Ephemeral Key)

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-ephemeral-apk:
    runs-on: ubuntu-latest

    steps:
    - name: 📥 Checkout
      uses: actions/checkout@v3

    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: 📦 System deps
      run: |
        sudo apt update
        sudo apt install -y build-essential git zip unzip openjdk-17-jdk \
          libffi-dev libssl-dev libjpeg-dev libfreetype6-dev libncurses6 socat

    - name: ⚙️ Install Buildozer (nightly has SIGPIPE fix)
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade --pre buildozer python-for-android cython cffi==1.15.1

    - name: 🔧 Init & patch buildozer.spec
      run: |
        buildozer init
        sed -i 's/^# *source.include_patterns.*/source.include_patterns = narcan_finder_android.py/' buildozer.spec
        sed -i 's/^# *title.*/title = Quantum NARCAN Finder/' buildozer.spec
        sed -i 's/^# *package.name.*/package.name = QuantumNarcan/' buildozer.spec
        sed -i 's/^# *package.domain.*/package.domain = org.quantum.narcan/' buildozer.spec
        sed -i 's/^# *version.*/version = 0.1/' buildozer.spec
        sed -i 's/^requirements.*/requirements = kivy, kivymd, httpx, numpy, psutil, cryptography, sqlite3, pennylane/' buildozer.spec
        echo 'android.permissions = INTERNET,WRITE_EXTERNAL_STORAGE,READ_EXTERNAL_STORAGE' >> buildozer.spec
        echo 'log_level = 2' >> buildozer.spec
        echo 'android.release_artifact = true' >> buildozer.spec

    - name: 📥 Update SDK
      run: yes | buildozer android update

    - name: 🔐 Ephemeral keystore
      run: |
        keytool -genkey -v -keystore quantum_temp.keystore \
          -alias quantumalias -keyalg RSA -keysize 2048 -validity 10000 \
          -storepass testpass -keypass testpass \
          -dname "CN=QuantumNarcan,O=OpenAI,L=Greenville,ST=SC,C=US"

    - name: 🧪 Build APK (no SIGPIPE)
      run: |
        export PYTHONUNBUFFERED=1
        export DEBIAN_FRONTEND=noninteractive
        timeout 40m buildozer android release --verbose | tee buildozer_output.log

    # ───────────────────────────────────────────────────────────────
    # NEW: locate the file that Buildozer actually produced
    - name: 🔍 Locate unsigned APK
      run: |
        APK_PATH=$(find bin -name "*-release-unsigned.apk" -print -quit)
        if [ -z "$APK_PATH" ]; then
          echo "No unsigned release APK found!"
          ls -R .
          exit 1
        fi
        echo "Unsigned APK => $APK_PATH"
        echo "APK_PATH=$APK_PATH" >> "$GITHUB_ENV"

    - name: 🔏 Sign APK
      run: |
        jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 \
          -keystore quantum_temp.keystore \
          -storepass testpass -keypass testpass \
          "$APK_PATH" quantumalias

    - name: 🧩 Zipalign
      run: |
        wget -q https://dl.google.com/android/repository/build-tools_r30.0.3-linux.zip
        unzip -q build-tools_r30.0.3-linux.zip -d android-tools
        SIGNED_APK="${APK_PATH/-unsigned/-signed}"
        android-tools/**/zipalign -v 4 "$APK_PATH" "$SIGNED_APK"
        echo "SIGNED_APK=$SIGNED_APK" >> "$GITHUB_ENV"

    - name: 📤 Upload Signed APK
      uses: actions/upload-artifact@v4
      with:
        name: quantum-narcan-signed-ephemeral
        path: ${{ env.SIGNED_APK }}

    - name: 📤 Upload build log
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: buildozer-log
        path: buildozer_output.log
